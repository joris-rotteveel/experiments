{"version":3,"sources":["assets/mountain.jpg","assets/food.jpg","assets/field.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","utils.js","webgl.js","m4.js","matrix-stack.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","index.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","topWindow","window","error","msg","console","log","loadShader","gl","shaderSource","shaderType","opt_errorCallback","errFn","shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","shaders","opt_attribs","opt_locations","program","attachShader","attrib","ndx","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","defaultShaderType","getBindPointForSamplerType","type","SAMPLER_2D","TEXTURE_2D","SAMPLER_CUBE","TEXTURE_CUBE_MAP","setUniforms","setters","uniformSetters","_len","values","Array","_key","_loop","uniforms","_values","_i","name","setter","setAttributes","attribs","attribSetters","setBuffersAndAttributes","buffers","indices","bindBuffer","ELEMENT_ARRAY_BUFFER","createAugmentedTypedArray","numComponents","numElements","opt_type","typedArray","cursor","push","ii","buffer","ArrayBuffer","jj","reset","opt_index","get","this","augmentTypedArray","Float32Array","createBufferFromTypedArray","array","drawType","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","allButIndices","getGLTypeForTypedArray","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","Int16Array","SHORT","Uint16Array","UNSIGNED_SHORT","Int32Array","INT","Uint32Array","UNSIGNED_INT","FLOAT","isArrayBuffer","a","makeTypedArray","data","isArray","guessNumComponentsFromName","createAttribsFromArrays","arrays","opt_mapping","mapping","createMapping","attribName","bufferName","origArray","normalize","getArray","texcoordRE","colorRE","test","Error","positionKeys","getNumElementsFromNonIndexedArrays","_i2","_positionKeys","k","arrayName","size","getNumComponents","createBufferInfoFromArrays","bufferInfo","loadImageAndCreateTextureInfo","url","tex","createTexture","bindTexture","texImage2D","RGBA","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","textureInfo","width","height","texture","img","Image","addEventListener","onLoad","removeEventListener","src","MatType","subtractVectors","b","dst","v","Math","sqrt","cross","distanceSq","dx","dy","dz","inverse","m","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","d","m4","copy","lookAt","cameraPosition","up","zAxis","xAxis","yAxis","addVectors","scaleVector","s","distance","compose","translation","quaternion","scale","x","y","z","w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","mat","slice","determinate","matrix","invSX","invSY","invSZ","trace","quatFromRotationMatrix","dot","identity","transpose","lengthSq","orthographic","left","right","bottom","top","near","far","frustum","perspective","fieldOfViewInRadians","aspect","f","tan","PI","rangeInv","tx","ty","tz","translate","xRotation","angleInRadians","c","cos","sin","yRotation","zRotation","xRotate","yRotate","zRotate","axisRotation","axis","n","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","multiply","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","transformVector","j","transformPoint","v0","v1","v2","transformDirection","transformNormal","mi","setDefaultType","Ctor","OldType","MatrixStack","instance","Constructor","TypeError","_classCallCheck","restore","stack","pop","save","getCurrentMatrix","setCurrentMatrix","undefined","rotateZ","document","querySelector","getContext","standardBuffers","position","texcoord","programInfo","shaderSources","createProgramFromSources","map","script","getElementById","text","textureUnit","createUniformSetter","uniformInfo","bindPoint","unit","location","getUniformLocation","info","substr","uniform1fv","uniform1f","FLOAT_VEC2","uniform2fv","FLOAT_VEC3","uniform3fv","FLOAT_VEC4","uniform4fv","uniform1iv","uniform1i","INT_VEC2","uniform2iv","INT_VEC3","uniform3iv","INT_VEC4","uniform4iv","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","uniformMatrix2fv","FLOAT_MAT3","uniformMatrix3fv","FLOAT_MAT4","uniformMatrix4fv","units","textures","index","activeTexture","TEXTURE0","toString","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","createUniformSetters","createAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","stride","offset","numAttribs","ACTIVE_ATTRIBUTES","attribInfo","getActiveAttrib","getAttribLocation","createAttributeSetters","createProgramInfo","objectsToDraw","u_matrix","u_textureMatrix","mountain","food","field","requestAnimationFrame","update","time","canvas","multiplier","clientWidth","clientHeight","resizeCanvasToDisplaySize","object","destX","destY","screenMatrix","translations","viewport","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","lastUsedProgramInfo","lastUsedBufferInfo","bindBuffers","useProgram","drawArrays","TRIANGLES","render"],"mappings":"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","file":"static/js/main.0f0a972c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mountain.ac271de8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/food.fcf987b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/field.5e6bc3b7.jpg\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","/*\n * Copyright 2012, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst topWindow = window;\n\nexport function isInIFrame(w) {\n  w = w || topWindow;\n  return w !== w.top;\n}\n\n/**\n * Wrapped logging function.\n * @param {string} msg The message to log.\n */\nexport function error(msg) {\n  if (topWindow.console) {\n    if (topWindow.console.error) {\n      topWindow.console.error(msg);\n    } else if (topWindow.console.log) {\n      topWindow.console.log(msg);\n    }\n  }\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @memberOf module:webgl-utils\n */\n\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\nexport function loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  const errFn = opt_errorCallback || error;\n  // Create the shader object\n  const shader = gl.createShader(shaderType);\n\n  // Load the shader source\n  gl.shaderSource(shader, shaderSource);\n\n  // Compile the shader\n  gl.compileShader(shader);\n\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    errFn(\"*** Error compiling shader '\" + shader + \"':\" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n\n/**\n * Creates a program, attaches shaders, binds attrib locations, links the\n * program and calls useProgram.\n * @param {WebGLShader[]} shaders The shaders to attach\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @memberOf module:webgl-utils\n */\nexport function createProgram(\n  gl,\n  shaders,\n  opt_attribs,\n  opt_locations,\n  opt_errorCallback\n) {\n  const errFn = opt_errorCallback || error;\n  const program = gl.createProgram();\n  shaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n  if (opt_attribs) {\n    opt_attribs.forEach(function (attrib, ndx) {\n      gl.bindAttribLocation(\n        program,\n        opt_locations ? opt_locations[ndx] : ndx,\n        attrib\n      );\n    });\n  }\n  gl.linkProgram(program);\n\n  // Check the link status\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    errFn(\"Error in program linking:\" + lastError);\n\n    gl.deleteProgram(program);\n    return null;\n  }\n  return program;\n}\n\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} opt_shaderType The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n */\nexport function createShaderFromScript(\n  gl,\n  scriptId,\n  opt_shaderType,\n  opt_errorCallback\n) {\n  let shaderSource = \"\";\n  let shaderType;\n  const shaderScript = document.getElementById(scriptId);\n  if (!shaderScript) {\n    throw \"*** Error: unknown script element\" + scriptId;\n  }\n  shaderSource = shaderScript.text;\n\n  if (!opt_shaderType) {\n    if (shaderScript.type === \"x-shader/x-vertex\") {\n      shaderType = gl.VERTEX_SHADER;\n    } else if (shaderScript.type === \"x-shader/x-fragment\") {\n      shaderType = gl.FRAGMENT_SHADER;\n    } else if (\n      shaderType !== gl.VERTEX_SHADER &&\n      shaderType !== gl.FRAGMENT_SHADER\n    ) {\n      throw \"*** Error: unknown shader type\";\n    }\n  }\n\n  return loadShader(\n    gl,\n    shaderSource,\n    opt_shaderType ? opt_shaderType : shaderType,\n    opt_errorCallback\n  );\n}\n\nconst defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\n/**\n * Creates a program from 2 script tags.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:webgl-utils\n */\nexport function createProgramFromScripts(\n  gl,\n  shaderScriptIds,\n  opt_attribs,\n  opt_locations,\n  opt_errorCallback\n) {\n  const shaders = [];\n  for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\n    shaders.push(\n      createShaderFromScript(\n        gl,\n        shaderScriptIds[ii],\n        gl[defaultShaderType[ii]],\n        opt_errorCallback\n      )\n    );\n  }\n  return createProgram(\n    gl,\n    shaders,\n    opt_attribs,\n    opt_locations,\n    opt_errorCallback\n  );\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSourcess Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram} The created program.\n * @memberOf module:webgl-utils\n */\nexport function createProgramFromSources(\n  gl,\n  shaderSources,\n  opt_attribs,\n  opt_locations,\n  opt_errorCallback\n) {\n  const shaders = [];\n  for (let ii = 0; ii < shaderSources.length; ++ii) {\n    shaders.push(\n      loadShader(\n        gl,\n        shaderSources[ii],\n        gl[defaultShaderType[ii]],\n        opt_errorCallback\n      )\n    );\n  }\n  return createProgram(\n    gl,\n    shaders,\n    opt_attribs,\n    opt_locations,\n    opt_errorCallback\n  );\n}\n\n/**\n * Returns the corresponding bind point for a given sampler type\n */\nexport function getBindPointForSamplerType(gl, type) {\n  if (type === gl.SAMPLER_2D) return gl.TEXTURE_2D; // eslint-disable-line\n  if (type === gl.SAMPLER_CUBE) return gl.TEXTURE_CUBE_MAP; // eslint-disable-line\n  return undefined;\n}\n\n/**\n * @typedef {Object.<string, function>} Setters\n */\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:webgl-utils.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:webgl-utils\n */\nexport function createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo) {\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    const type = uniformInfo.type;\n    let info = uniformInfo;\n    // Check if this uniform is an array\n    const isArray =\n      uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    if (type === gl.FLOAT && isArray) {\n      return function (v) {\n        gl.uniform1fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT) {\n      return function (v) {\n        gl.uniform1f(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC2) {\n      return function (v) {\n        gl.uniform2fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC3) {\n      return function (v) {\n        gl.uniform3fv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_VEC4) {\n      return function (v) {\n        gl.uniform4fv(location, v);\n      };\n    }\n    if (type === gl.INT && isArray) {\n      return function (v) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.INT) {\n      return function (v) {\n        gl.uniform1i(location, v);\n      };\n    }\n    if (type === gl.INT_VEC2) {\n      return function (v) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC3) {\n      return function (v) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.INT_VEC4) {\n      return function (v) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.BOOL) {\n      return function (v) {\n        gl.uniform1iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC2) {\n      return function (v) {\n        gl.uniform2iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC3) {\n      return function (v) {\n        gl.uniform3iv(location, v);\n      };\n    }\n    if (type === gl.BOOL_VEC4) {\n      return function (v) {\n        gl.uniform4iv(location, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT2) {\n      return function (v) {\n        gl.uniformMatrix2fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT3) {\n      return function (v) {\n        gl.uniformMatrix3fv(location, false, v);\n      };\n    }\n    if (type === gl.FLOAT_MAT4) {\n      return function (v) {\n        gl.uniformMatrix4fv(location, false, v);\n      };\n    }\n    if ((type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) && isArray) {\n      const units = [];\n      for (let ii = 0; ii < info.size; ++ii) {\n        units.push(textureUnit++);\n      }\n      return (function (bindPoint, units) {\n        return function (textures) {\n          gl.uniform1iv(location, units);\n          textures.forEach(function (texture, index) {\n            gl.activeTexture(gl.TEXTURE0 + units[index]);\n            gl.bindTexture(bindPoint, texture);\n          });\n        };\n      })(getBindPointForSamplerType(gl, type), units);\n    }\n    if (type === gl.SAMPLER_2D || type === gl.SAMPLER_CUBE) {\n      return (function (bindPoint, unit) {\n        return function (texture) {\n          gl.uniform1i(location, unit);\n          gl.activeTexture(gl.TEXTURE0 + unit);\n          gl.bindTexture(bindPoint, texture);\n        };\n      })(getBindPointForSamplerType(gl, type), textureUnit++);\n    }\n    throw \"unknown type: 0x\" + type.toString(16); // we should never get here.\n  }\n\n  const uniformSetters = {};\n  const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (!uniformInfo) {\n      break;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n    const setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n  return uniformSetters;\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * Example:\n *\n *     let programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     let tex1 = gl.createTexture();\n *     let tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     let uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     setUniforms(programInfo.uniformSetters, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     let texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     let uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     let moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     setUniforms(programInfo.uniformSetters, uniforms);\n *     setUniforms(programInfo.uniformSetters, moreUniforms);\n *\n * @param {Object.<string, function>|module:webgl-utils.ProgramInfo} setters the setters returned from\n *        `createUniformSetters` or a ProgramInfo from {@link module:webgl-utils.createProgramInfo}.\n * @param {Object.<string, value>} an object with values for the\n *        uniforms.\n * @memberOf module:webgl-utils\n */\nexport function setUniforms(setters, ...values) {\n  setters = setters.uniformSetters || setters;\n  for (const uniforms of values) {\n    Object.keys(uniforms).forEach(function (name) {\n      const setter = setters[name];\n      if (setter) {\n        setter(uniforms[name]);\n      }\n    });\n  }\n}\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:webgl-utils.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:webgl-utils.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:webgl-utils\n */\nexport function createAttributeSetters(gl, program) {\n  const attribSetters = {};\n\n  function createAttribSetter(index) {\n    return function (b) {\n      if (b.value) {\n        gl.disableVertexAttribArray(index);\n        switch (b.value.length) {\n          case 4:\n            gl.vertexAttrib4fv(index, b.value);\n            break;\n          case 3:\n            gl.vertexAttrib3fv(index, b.value);\n            break;\n          case 2:\n            gl.vertexAttrib2fv(index, b.value);\n            break;\n          case 1:\n            gl.vertexAttrib1fv(index, b.value);\n            break;\n          default:\n            throw new Error(\n              \"the length of a float constant value must be between 1 and 4!\"\n            );\n        }\n      } else {\n        gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n        gl.enableVertexAttribArray(index);\n        gl.vertexAttribPointer(\n          index,\n          b.numComponents || b.size,\n          b.type || gl.FLOAT,\n          b.normalize || false,\n          b.stride || 0,\n          b.offset || 0\n        );\n      }\n    };\n  }\n\n  const numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (!attribInfo) {\n      break;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    attribSetters[attribInfo.name] = createAttribSetter(index);\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:webgl-utils.setBuffersAndAttributes})\n *\n * Example:\n *\n *     let program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     let attribSetters = createAttributeSetters(program);\n *\n *     let positionBuffer = gl.createBuffer();\n *     let texcoordBuffer = gl.createBuffer();\n *\n *     let attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     let attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>|model:webgl-utils.ProgramInfo} setters Attribute setters as returned from createAttributeSetters or a ProgramInfo as returned {@link module:webgl-utils.createProgramInfo}\n * @param {Object.<string, module:webgl-utils.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @memberOf module:webgl-utils\n * @deprecated use {@link module:webgl-utils.setBuffersAndAttributes}\n */\nexport function setAttributes(setters, attribs) {\n  setters = setters.attribSetters || setters;\n  Object.keys(attribs).forEach(function (name) {\n    const setter = setters[name];\n    if (setter) {\n      setter(attribs[name]);\n    }\n  });\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:webgl-utils.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n */\nexport function createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:webgl-utils.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:webgl-utils:BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n */\nexport function createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(\n    gl,\n    programInfo.attribSetters || programInfo,\n    bufferInfo.attribs,\n    bufferInfo.indices\n  );\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters: object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters: object of setters as returned from createAttribSetters,\n * @memberOf module:webgl-utils\n */\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSourcess Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:webgl-utils.ProgramInfo} The created program.\n * @memberOf module:webgl-utils\n */\nexport function createProgramInfo(\n  gl,\n  shaderSources,\n  opt_attribs,\n  opt_locations,\n  opt_errorCallback\n) {\n  shaderSources = shaderSources.map(function (source) {\n    const script = document.getElementById(source);\n    return script ? script.text : source;\n  });\n  const program = createProgramFromSources(\n    gl,\n    shaderSources,\n    opt_attribs,\n    opt_locations,\n    opt_errorCallback\n  );\n  if (!program) {\n    return null;\n  }\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  return {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters,\n  };\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     let programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     let arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     let bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(programInfo.attribSetters, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {Object.<string, function>} setters Attribute setters as returned from `createAttributeSetters`\n * @param {module:webgl-utils.BufferInfo} buffers a BufferInfo as returned from `createBufferInfoFromArrays`.\n * @memberOf module:webgl-utils\n */\nexport function setBuffersAndAttributes(gl, setters, buffers) {\n  setAttributes(setters, buffers.attribs);\n  if (buffers.indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n  }\n}\n\n// Add your prefix here.\nconst browserPrefixes = [\"\", \"MOZ_\", \"OP_\", \"WEBKIT_\"];\n\n/**\n * Given an extension name like WEBGL_compressed_texture_s3tc\n * returns the supported version extension, like\n * WEBKIT_WEBGL_compressed_teture_s3tc\n * @param {string} name Name of extension to look for\n * @return {WebGLExtension} The extension or undefined if not\n *     found.\n * @memberOf module:webgl-utils\n */\nexport function getExtensionWithKnownPrefixes(gl, name) {\n  for (let ii = 0; ii < browserPrefixes.length; ++ii) {\n    const prefixedName = browserPrefixes[ii] + name;\n    const ext = gl.getExtension(prefixedName);\n    if (ext) {\n      return ext;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Resize a canvas to match the size its displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] amount to multiply by.\n *    Pass in window.devicePixelRatio for native pixels.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:webgl-utils\n */\nexport function resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  const width = (canvas.clientWidth * multiplier) | 0;\n  const height = (canvas.clientHeight * multiplier) | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\n// Add `push` to a typed array. It just keeps a 'cursor'\n// and allows use to `push` values into the array so we\n// don't have to manually compute offsets\nexport function augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function () {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (\n        value instanceof Array ||\n        (value.buffer && value.buffer instanceof ArrayBuffer)\n      ) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, \"numElements\", {\n    get: function () {\n      return (this.length / this.numComponents) | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push`  export  function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     let array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBuffer} A typed array.\n * @memberOf module:webgl-utils\n */\nexport function createAugmentedTypedArray(\n  numComponents,\n  numElements,\n  opt_type\n) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(\n    new Type(numComponents * numElements),\n    numComponents\n  );\n}\n\nexport function createBufferFromTypedArray(gl, array, type, drawType) {\n  type = type || gl.ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n  return buffer;\n}\n\nexport function allButIndices(name) {\n  return name !== \"indices\";\n}\n\nexport function createMapping(obj) {\n  const mapping = {};\n  Object.keys(obj)\n    .filter(allButIndices)\n    .forEach(function (key) {\n      mapping[\"a_\" + key] = key;\n    });\n  return mapping;\n}\n\nexport function getGLTypeForTypedArray(gl, typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return gl.BYTE;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint8Array) {\n    return gl.UNSIGNED_BYTE;\n  } // eslint-disable-line\n  if (typedArray instanceof Int16Array) {\n    return gl.SHORT;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint16Array) {\n    return gl.UNSIGNED_SHORT;\n  } // eslint-disable-line\n  if (typedArray instanceof Int32Array) {\n    return gl.INT;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint32Array) {\n    return gl.UNSIGNED_INT;\n  } // eslint-disable-line\n  if (typedArray instanceof Float32Array) {\n    return gl.FLOAT;\n  } // eslint-disable-line\n  throw \"unsupported typed array type\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nexport function getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n  return false;\n}\n\nexport function isArrayBuffer(a) {\n  return a.buffer && a.buffer instanceof ArrayBuffer;\n}\n\nexport function makeTypedArray(array, name) {\n  if (isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (array.data && isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  if (!array.numComponents) {\n    array.numComponents = guessNumComponentsFromName(name, array.length);\n  }\n\n  let type = array.type;\n  if (!type) {\n    if (name === \"indices\") {\n      type = Uint16Array;\n    }\n  }\n  const typedArray = createAugmentedTypedArray(\n    array.numComponents,\n    (array.data.length / array.numComponents) | 0,\n    type\n  );\n  typedArray.push(array.data);\n  return typedArray;\n}\n\n/**\n * @typedef {Object} AttribInfo\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] the number of components for this attribute.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalized] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @memberOf module:webgl-utils\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      let arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      let attribs = {\n *        a_position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        a_texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        a_normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        a_color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {Object.<string, array|typedarray>} arrays The arrays\n * @param {Object.<string, string>} [opt_mapping] mapping from attribute name to array name.\n *     if not specified defaults to \"a_name\" -> \"name\".\n * @return {Object.<string, module:webgl-utils.AttribInfo>} the attribs\n * @memberOf module:webgl-utils\n */\nexport function createAttribsFromArrays(gl, arrays, opt_mapping) {\n  const mapping = opt_mapping || createMapping(arrays);\n  const attribs = {};\n  Object.keys(mapping).forEach(function (attribName) {\n    const bufferName = mapping[attribName];\n    const origArray = arrays[bufferName];\n    if (origArray.value) {\n      attribs[attribName] = {\n        value: origArray.value,\n      };\n    } else {\n      const array = makeTypedArray(origArray, bufferName);\n      attribs[attribName] = {\n        buffer: createBufferFromTypedArray(gl, array),\n        numComponents:\n          origArray.numComponents ||\n          array.numComponents ||\n          guessNumComponentsFromName(bufferName),\n        type: getGLTypeForTypedArray(gl, array),\n        normalize: getNormalizationForTypedArray(array),\n      };\n    }\n  });\n  return attribs;\n}\n\nexport function getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nexport function guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(\n      `Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`\n    );\n  }\n\n  return numComponents;\n}\n\nexport function getNumComponents(array, arrayName) {\n  return (\n    array.numComponents ||\n    array.size ||\n    guessNumComponentsFromName(arrayName, getArray(array).length)\n  );\n}\n\n/**\n * tries to get the number of elements from a set of arrays.\n */\nconst positionKeys = [\"position\", \"positions\", \"a_position\"];\nexport function getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  for (const k of positionKeys) {\n    if (k in arrays) {\n      key = k;\n      break;\n    }\n  }\n  key = key || Object.keys(arrays)[0];\n  const array = arrays[key];\n  const length = getArray(array).length;\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(\n      `numComponents ${numComponents} not correct for length ${length}`\n    );\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:webgl-utils.AttribInfo>} attribs The attribs approriate to call `setAttributes`\n * @memberOf module:webgl-utils\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:webgl-utils.setBuffersAndAttributes} and to\n * {@link module:webgl-utils:drawBufferInfo}.\n *\n * Given an object like\n *\n *     let arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     let arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     let arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     let positions = createAugmentedTypedArray(3, 4);\n *     let texcoords = createAugmentedTypedArray(2, 4);\n *     let normals   = createAugmentedTypedArray(3, 4);\n *     let indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     let arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     let bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {Object.<string, array|object|typedarray>} arrays Your data\n * @param {Object.<string, string>} [opt_mapping] an optional mapping of attribute to array name.\n *    If not passed in it's assumed the array names will be mapped to an attribute\n *    of the same name with \"a_\" prefixed to it. An other words.\n *\n *        let arrays = {\n *           position: ...,\n *           texcoord: ...,\n *           normal:   ...,\n *           indices:  ...,\n *        };\n *\n *        bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *    Is the same as\n *\n *        let arrays = {\n *           position: ...,\n *           texcoord: ...,\n *           normal:   ...,\n *           indices:  ...,\n *        };\n *\n *        let mapping = {\n *          a_position: \"position\",\n *          a_texcoord: \"texcoord\",\n *          a_normal:   \"normal\",\n *        };\n *\n *        bufferInfo = createBufferInfoFromArrays(gl, arrays, mapping);\n *\n * @return {module:webgl-utils.BufferInfo} A BufferInfo\n * @memberOf module:webgl-utils\n */\nexport function createBufferInfoFromArrays(gl, arrays, opt_mapping) {\n  const bufferInfo = {\n    attribs: createAttribsFromArrays(gl, arrays, opt_mapping),\n  };\n  let indices = arrays.indices;\n  if (indices) {\n    indices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(\n      gl,\n      indices,\n      gl.ELEMENT_ARRAY_BUFFER\n    );\n    bufferInfo.numElements = indices.length;\n  } else {\n    bufferInfo.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates buffers from typed arrays\n *\n * Given something like this\n *\n *     let arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {Object<string, array|typedarray>} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:webgl-utils\n */\nexport function createBuffersFromArrays(gl, arrays) {\n  const buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    const type = key === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n    const array = makeTypedArray(arrays[key], \"name\");\n    buffers[key] = createBufferFromTypedArray(gl, array, type);\n  });\n\n  // hrm\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n  } else if (arrays.position) {\n    buffers.numElements = arrays.position.length / 3;\n  }\n\n  return buffers;\n}\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:webgl-utils.BufferInfo} bufferInfo as returned from createBufferInfoFromArrays\n * @param {enum} [primitiveType] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...)\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @memberOf module:webgl-utils\n */\nexport function drawBufferInfo(gl, bufferInfo, primitiveType, count, offset) {\n  const indices = bufferInfo.indices;\n  primitiveType = primitiveType === undefined ? gl.TRIANGLES : primitiveType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (indices) {\n    gl.drawElements(primitiveType, numElements, gl.UNSIGNED_SHORT, offset);\n  } else {\n    gl.drawArrays(primitiveType, offset, numElements);\n  }\n}\n\n/**\n * @typedef {Object} DrawObject\n * @property {module:webgl-utils.ProgramInfo} programInfo A ProgramInfo as returned from createProgramInfo\n * @property {module:webgl-utils.BufferInfo} bufferInfo A BufferInfo as returned from createBufferInfoFromArrays\n * @property {Object<string, ?>} uniforms The values for the uniforms\n * @memberOf module:webgl-utils\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:webgl-utils\n */\nexport function drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function (object) {\n    const programInfo = object.programInfo;\n    const bufferInfo = object.bufferInfo;\n    let bindBuffers = false;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo.attribSetters, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo.uniformSetters, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo);\n  });\n}\n\nexport function glEnumToString(gl, v) {\n  const results = [];\n  for (const key in gl) {\n    if (gl[key] === v) {\n      results.push(key);\n    }\n  }\n  return results.length ? results.join(\" | \") : `0x${v.toString(16)}`;\n}\n","// creates a texture info { width: w, height: h, texture: tex }\n// The texture will start with 1x1 pixels and be updated\n// when the image has loaded\nexport const loadImageAndCreateTextureInfo = (url, gl) => {\n  var tex = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, tex);\n  // Fill the texture with a 1x1 blue pixel.\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGBA,\n    1,\n    1,\n    0,\n    gl.RGBA,\n    gl.UNSIGNED_BYTE,\n    new Uint8Array([0, 0, 255, 255])\n  );\n\n  // let's assume all images are not a power of 2\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  var textureInfo = {\n    width: 1, // we don't know the size until it loads\n    height: 1,\n    texture: tex,\n  };\n  var img = new Image();\n  const onLoad = () => {\n    textureInfo.width = img.width;\n    textureInfo.height = img.height;\n\n    gl.bindTexture(gl.TEXTURE_2D, textureInfo.texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\n    img.removeEventListener(\"load\", onLoad);\n  };\n  img.addEventListener(\"load\", onLoad);\n  img.src = url;\n\n  return textureInfo;\n};\n","/*\n * Copyright 2014, Gregg Tavares.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Gregg Tavares. nor the names of his\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nlet MatType = Float32Array;\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} Ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n */\nfunction setDefaultType(Ctor) {\n  const OldType = MatType;\n  MatType = Ctor;\n  return OldType;\n}\n\n/**\n * Takes two 4-by-4 matrices, a and b, and computes the product in the order\n * that pre-composes b with a.  In other words, the matrix returned will\n * transform by b first and then a.  Note this is subtly different from just\n * multiplying the matrices together.  For given a and b, this function returns\n * the same object in both row-major and column-major mode.\n * @param {Matrix4} a A matrix.\n * @param {Matrix4} b A matrix.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var b00 = b[0 * 4 + 0];\n  var b01 = b[0 * 4 + 1];\n  var b02 = b[0 * 4 + 2];\n  var b03 = b[0 * 4 + 3];\n  var b10 = b[1 * 4 + 0];\n  var b11 = b[1 * 4 + 1];\n  var b12 = b[1 * 4 + 2];\n  var b13 = b[1 * 4 + 3];\n  var b20 = b[2 * 4 + 0];\n  var b21 = b[2 * 4 + 1];\n  var b22 = b[2 * 4 + 2];\n  var b23 = b[2 * 4 + 3];\n  var b30 = b[3 * 4 + 0];\n  var b31 = b[3 * 4 + 1];\n  var b32 = b[3 * 4 + 2];\n  var b33 = b[3 * 4 + 3];\n  var a00 = a[0 * 4 + 0];\n  var a01 = a[0 * 4 + 1];\n  var a02 = a[0 * 4 + 2];\n  var a03 = a[0 * 4 + 3];\n  var a10 = a[1 * 4 + 0];\n  var a11 = a[1 * 4 + 1];\n  var a12 = a[1 * 4 + 2];\n  var a13 = a[1 * 4 + 3];\n  var a20 = a[2 * 4 + 0];\n  var a21 = a[2 * 4 + 1];\n  var a22 = a[2 * 4 + 2];\n  var a23 = a[2 * 4 + 3];\n  var a30 = a[3 * 4 + 0];\n  var a31 = a[3 * 4 + 1];\n  var a32 = a[3 * 4 + 2];\n  var a33 = a[3 * 4 + 3];\n  dst[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n  dst[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n  dst[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n  dst[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n  dst[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n  dst[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n  dst[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n  dst[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n  dst[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n  dst[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n  dst[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n  dst[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n  dst[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n  dst[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n  dst[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n  dst[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n  return dst;\n}\n\n/**\n * adds 2 vectors3s\n * @param {Vector3} a a\n * @param {Vector3} b b\n * @param {Vector3} dst optional vector3 to store result\n * @return {Vector3} dst or new Vector3 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction addVectors(a, b, dst) {\n  dst = dst || new MatType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n\n/**\n * subtracts 2 vectors3s\n * @param {Vector3} a a\n * @param {Vector3} b b\n * @param {Vector3} dst optional vector3 to store result\n * @return {Vector3} dst or new Vector3 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction subtractVectors(a, b, dst) {\n  dst = dst || new MatType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n\n/**\n * scale vectors3\n * @param {Vector3} v vector\n * @param {Number} s scale\n * @param {Vector3} dst optional vector3 to store result\n * @return {Vector3} dst or new Vector3 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction scaleVector(v, s, dst) {\n  dst = dst || new MatType(3);\n  dst[0] = v[0] * s;\n  dst[1] = v[1] * s;\n  dst[2] = v[2] * s;\n  return dst;\n}\n\n/**\n * normalizes a vector.\n * @param {Vector3} v vector to normalize\n * @param {Vector3} dst optional vector3 to store result\n * @return {Vector3} dst or new Vector3 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction normalize(v, dst) {\n  dst = dst || new MatType(3);\n  var length = Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n  // make sure we don't divide by 0.\n  if (length > 0.00001) {\n    dst[0] = v[0] / length;\n    dst[1] = v[1] / length;\n    dst[2] = v[2] / length;\n  }\n  return dst;\n}\n\n/**\n * Computes the length of a vector\n * @param {Vector3} v vector to take length of\n * @return {number} length of vector\n */\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the length squared of a vector\n * @param {Vector3} v vector to take length of\n * @return {number} length sqaured of vector\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the cross product of 2 vectors3s\n * @param {Vector3} a a\n * @param {Vector3} b b\n * @param {Vector3} dst optional vector3 to store result\n * @return {Vector3} dst or new Vector3 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction cross(a, b, dst) {\n  dst = dst || new MatType(3);\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = a[2] * b[0] - a[0] * b[2];\n  dst[2] = a[0] * b[1] - a[1] * b[0];\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {Vector3} a Operand vector.\n * @param {Vector3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:webgl-3d-math\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the distance squared between 2 points\n * @param {Vector3} a\n * @param {Vector3} b\n * @return {number} distance squared between a and b\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Computes the distance between 2 points\n * @param {Vector3} a\n * @param {Vector3} b\n * @return {number} distance between a and b\n */\nfunction distance(a, b) {\n  return Math.sqrt(distanceSq(a, b));\n}\n\n/**\n * Makes an identity matrix.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Transposes a matrix.\n * @param {Matrix4} m matrix to transpose.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0] = m[0];\n  dst[1] = m[4];\n  dst[2] = m[8];\n  dst[3] = m[12];\n  dst[4] = m[1];\n  dst[5] = m[5];\n  dst[6] = m[9];\n  dst[7] = m[13];\n  dst[8] = m[2];\n  dst[9] = m[6];\n  dst[10] = m[10];\n  dst[11] = m[14];\n  dst[12] = m[3];\n  dst[13] = m[7];\n  dst[14] = m[11];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates a lookAt matrix.\n * This is a world matrix for a camera. In other words it will transform\n * from the origin to a place and orientation in the world. For a view\n * matrix take the inverse of this.\n * @param {Vector3} cameraPosition position of the camera\n * @param {Vector3} target position of the target\n * @param {Vector3} up direction\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction lookAt(cameraPosition, target, up, dst) {\n  dst = dst || new MatType(16);\n  var zAxis = normalize(subtractVectors(cameraPosition, target));\n  var xAxis = normalize(cross(up, zAxis));\n  var yAxis = normalize(cross(zAxis, xAxis));\n\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = cameraPosition[0];\n  dst[13] = cameraPosition[1];\n  dst[14] = cameraPosition[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from -1 to 1 in the z dimension.\n * @param {number} fieldOfViewInRadians field of view in y axis.\n * @param {number} aspect aspect of viewport (width / height)\n * @param {number} near near Z clipping plane\n * @param {number} far far Z clipping plane\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction perspective(fieldOfViewInRadians, aspect, near, far, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewInRadians);\n  var rangeInv = 1.0 / (near - far);\n\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (near + far) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthographic projection matrix given the coordinates of the\n * planes defining the axis-aligned, box-shaped viewing volume.  The matrix\n * generated sends that box to the unit box.  Note that although left and right\n * are x coordinates and bottom and top are y coordinates, near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  We assume a unit box extending from -1 to 1 in the x and y\n * dimensions and from -1 to 1 in the z dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction orthographic(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (left + right) / (left - right);\n  dst[13] = (bottom + top) / (bottom - top);\n  dst[14] = (near + far) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from -1 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = far - near;\n\n  dst[0] = (2 * near) / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = (2 * near) / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = -(far + near) / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = (-2 * near * far) / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Makes a translation matrix\n * @param {number} tx x translation.\n * @param {number} ty y translation.\n * @param {number} tz z translation.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction translation(tx, ty, tz, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = tx;\n  dst[13] = ty;\n  dst[14] = tz;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Multiply by translation matrix.\n * @param {Matrix4} m matrix to multiply\n * @param {number} tx x translation.\n * @param {number} ty y translation.\n * @param {number} tz z translation.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction translate(m, tx, ty, tz, dst) {\n  // This is the optimized version of\n  // return multiply(m, translation(tx, ty, tz), dst);\n  dst = dst || new MatType(16);\n\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * tx + m10 * ty + m20 * tz + m30;\n  dst[13] = m01 * tx + m11 * ty + m21 * tz + m31;\n  dst[14] = m02 * tx + m12 * ty + m22 * tz + m32;\n  dst[15] = m03 * tx + m13 * ty + m23 * tz + m33;\n\n  return dst;\n}\n\n/**\n * Makes an x rotation matrix\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction xRotation(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Multiply by an x rotation matrix\n * @param {Matrix4} m matrix to multiply\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction xRotate(m, angleInRadians, dst) {\n  // this is the optimized version of\n  // return multiply(m, xRotation(angleInRadians), dst);\n  dst = dst || new MatType(16);\n\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Makes an y rotation matrix\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction yRotation(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Multiply by an y rotation matrix\n * @param {Matrix4} m matrix to multiply\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction yRotate(m, angleInRadians, dst) {\n  // this is the optimized version of\n  // return multiply(m, yRotation(angleInRadians), dst);\n  dst = dst || new MatType(16);\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Makes an z rotation matrix\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction zRotation(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Multiply by an z rotation matrix\n * @param {Matrix4} m matrix to multiply\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction zRotate(m, angleInRadians, dst) {\n  // This is the optimized version of\n  // return multiply(m, zRotation(angleInRadians), dst);\n  dst = dst || new MatType(16);\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Makes an rotation matrix around an arbitrary axis\n * @param {Vector3} axis axis to rotate around\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Multiply by an axis rotation matrix\n * @param {Matrix4} m matrix to multiply\n * @param {Vector3} axis axis to rotate around\n * @param {number} angleInRadians amount to rotate\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  // This is the optimized version of\n  // return multiply(m, axisRotation(axis, angleInRadians), dst);\n  dst = dst || new MatType(16);\n\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Makes a scale matrix\n * @param {number} sx x scale.\n * @param {number} sy y scale.\n * @param {number} sz z scale.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction scaling(sx, sy, sz, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0] = sx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = sy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = sz;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Multiply by a scaling matrix\n * @param {Matrix4} m matrix to multiply\n * @param {number} sx x scale.\n * @param {number} sy y scale.\n * @param {number} sz z scale.\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction scale(m, sx, sy, sz, dst) {\n  // This is the optimized version of\n  // return multiply(m, scaling(sx, sy, sz), dst);\n  dst = dst || new MatType(16);\n\n  dst[0] = sx * m[0 * 4 + 0];\n  dst[1] = sx * m[0 * 4 + 1];\n  dst[2] = sx * m[0 * 4 + 2];\n  dst[3] = sx * m[0 * 4 + 3];\n  dst[4] = sy * m[1 * 4 + 0];\n  dst[5] = sy * m[1 * 4 + 1];\n  dst[6] = sy * m[1 * 4 + 2];\n  dst[7] = sy * m[1 * 4 + 3];\n  dst[8] = sz * m[2 * 4 + 0];\n  dst[9] = sz * m[2 * 4 + 1];\n  dst[10] = sz * m[2 * 4 + 2];\n  dst[11] = sz * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * creates a matrix from translation, quaternion, scale\n * @param {Number[]} translation [x, y, z] translation\n * @param {Number[]} quaternion [x, y, z, z] quaternion rotation\n * @param {Number[]} scale [x, y, z] scale\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n */\nfunction compose(translation, quaternion, scale, dst) {\n  dst = dst || new MatType(16);\n\n  const x = quaternion[0];\n  const y = quaternion[1];\n  const z = quaternion[2];\n  const w = quaternion[3];\n\n  const x2 = x + x;\n  const y2 = y + y;\n  const z2 = z + z;\n\n  const xx = x * x2;\n  const xy = x * y2;\n  const xz = x * z2;\n\n  const yy = y * y2;\n  const yz = y * z2;\n  const zz = z * z2;\n\n  const wx = w * x2;\n  const wy = w * y2;\n  const wz = w * z2;\n\n  const sx = scale[0];\n  const sy = scale[1];\n  const sz = scale[2];\n\n  dst[0] = (1 - (yy + zz)) * sx;\n  dst[1] = (xy + wz) * sx;\n  dst[2] = (xz - wy) * sx;\n  dst[3] = 0;\n\n  dst[4] = (xy - wz) * sy;\n  dst[5] = (1 - (xx + zz)) * sy;\n  dst[6] = (yz + wx) * sy;\n  dst[7] = 0;\n\n  dst[8] = (xz + wy) * sz;\n  dst[9] = (yz - wx) * sz;\n  dst[10] = (1 - (xx + yy)) * sz;\n  dst[11] = 0;\n\n  dst[12] = translation[0];\n  dst[13] = translation[1];\n  dst[14] = translation[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\nfunction quatFromRotationMatrix(m, dst) {\n  // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n  // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n  const m11 = m[0];\n  const m12 = m[4];\n  const m13 = m[8];\n  const m21 = m[1];\n  const m22 = m[5];\n  const m23 = m[9];\n  const m31 = m[2];\n  const m32 = m[6];\n  const m33 = m[10];\n\n  const trace = m11 + m22 + m33;\n\n  if (trace > 0) {\n    const s = 0.5 / Math.sqrt(trace + 1);\n    dst[3] = 0.25 / s;\n    dst[0] = (m32 - m23) * s;\n    dst[1] = (m13 - m31) * s;\n    dst[2] = (m21 - m12) * s;\n  } else if (m11 > m22 && m11 > m33) {\n    const s = 2 * Math.sqrt(1 + m11 - m22 - m33);\n    dst[3] = (m32 - m23) / s;\n    dst[0] = 0.25 * s;\n    dst[1] = (m12 + m21) / s;\n    dst[2] = (m13 + m31) / s;\n  } else if (m22 > m33) {\n    const s = 2 * Math.sqrt(1 + m22 - m11 - m33);\n    dst[3] = (m13 - m31) / s;\n    dst[0] = (m12 + m21) / s;\n    dst[1] = 0.25 * s;\n    dst[2] = (m23 + m32) / s;\n  } else {\n    const s = 2 * Math.sqrt(1 + m33 - m11 - m22);\n    dst[3] = (m21 - m12) / s;\n    dst[0] = (m13 + m31) / s;\n    dst[1] = (m23 + m32) / s;\n    dst[2] = 0.25 * s;\n  }\n}\n\nfunction decompose(mat, translation, quaternion, scale) {\n  let sx = m4.length(mat.slice(0, 3));\n  const sy = m4.length(mat.slice(4, 7));\n  const sz = m4.length(mat.slice(8, 11));\n\n  // if determinate is negative, we need to invert one scale\n  const det = determinate(mat);\n  if (det < 0) {\n    sx = -sx;\n  }\n\n  translation[0] = mat[12];\n  translation[1] = mat[13];\n  translation[2] = mat[14];\n\n  // scale the rotation part\n  const matrix = m4.copy(mat);\n\n  const invSX = 1 / sx;\n  const invSY = 1 / sy;\n  const invSZ = 1 / sz;\n\n  matrix[0] *= invSX;\n  matrix[1] *= invSX;\n  matrix[2] *= invSX;\n\n  matrix[4] *= invSY;\n  matrix[5] *= invSY;\n  matrix[6] *= invSY;\n\n  matrix[8] *= invSZ;\n  matrix[9] *= invSZ;\n  matrix[10] *= invSZ;\n\n  quatFromRotationMatrix(matrix, quaternion);\n\n  scale[0] = sx;\n  scale[1] = sy;\n  scale[2] = sz;\n}\n\nfunction determinate(m) {\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n\n  var t0 =\n    tmp_0 * m11 +\n    tmp_3 * m21 +\n    tmp_4 * m31 -\n    (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 =\n    tmp_1 * m01 +\n    tmp_6 * m21 +\n    tmp_9 * m31 -\n    (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 =\n    tmp_2 * m01 +\n    tmp_7 * m11 +\n    tmp_10 * m31 -\n    (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 =\n    tmp_5 * m01 +\n    tmp_8 * m11 +\n    tmp_11 * m21 -\n    (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  return 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n}\n\n/**\n * Computes the inverse of a matrix.\n * @param {Matrix4} m matrix to compute inverse of\n * @param {Matrix4} [dst] optional matrix to store result\n * @return {Matrix4} dst or a new matrix if none provided\n * @memberOf module:webgl-3d-math\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n\n  var t0 =\n    tmp_0 * m11 +\n    tmp_3 * m21 +\n    tmp_4 * m31 -\n    (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 =\n    tmp_1 * m01 +\n    tmp_6 * m21 +\n    tmp_9 * m31 -\n    (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 =\n    tmp_2 * m01 +\n    tmp_7 * m11 +\n    tmp_10 * m31 -\n    (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 =\n    tmp_5 * m01 +\n    tmp_8 * m11 +\n    tmp_11 * m21 -\n    (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] =\n    d *\n    (tmp_1 * m10 +\n      tmp_2 * m20 +\n      tmp_5 * m30 -\n      (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] =\n    d *\n    (tmp_0 * m00 +\n      tmp_7 * m20 +\n      tmp_8 * m30 -\n      (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] =\n    d *\n    (tmp_3 * m00 +\n      tmp_6 * m10 +\n      tmp_11 * m30 -\n      (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] =\n    d *\n    (tmp_4 * m00 +\n      tmp_9 * m10 +\n      tmp_10 * m20 -\n      (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] =\n    d *\n    (tmp_12 * m13 +\n      tmp_15 * m23 +\n      tmp_16 * m33 -\n      (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] =\n    d *\n    (tmp_13 * m03 +\n      tmp_18 * m23 +\n      tmp_21 * m33 -\n      (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] =\n    d *\n    (tmp_14 * m03 +\n      tmp_19 * m13 +\n      tmp_22 * m33 -\n      (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] =\n    d *\n    (tmp_17 * m03 +\n      tmp_20 * m13 +\n      tmp_23 * m23 -\n      (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] =\n    d *\n    (tmp_14 * m22 +\n      tmp_17 * m32 +\n      tmp_13 * m12 -\n      (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] =\n    d *\n    (tmp_20 * m32 +\n      tmp_12 * m02 +\n      tmp_19 * m22 -\n      (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] =\n    d *\n    (tmp_18 * m12 +\n      tmp_23 * m32 +\n      tmp_15 * m02 -\n      (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] =\n    d *\n    (tmp_22 * m22 +\n      tmp_16 * m02 +\n      tmp_21 * m12 -\n      (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Takes a  matrix and a vector with 4 entries, transforms that vector by\n * the matrix, and returns the result as a vector with 4 entries.\n * @param {Matrix4} m The matrix.\n * @param {Vector4} v The point in homogenous coordinates.\n * @param {Vector4} dst optional vector4 to store result\n * @return {Vector4} dst or new Vector4 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction transformVector(m, v, dst) {\n  dst = dst || new MatType(4);\n  for (var i = 0; i < 4; ++i) {\n    dst[i] = 0.0;\n    for (var j = 0; j < 4; ++j) {\n      dst[i] += v[j] * m[j * 4 + i];\n    }\n  }\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {Matrix4} m The matrix.\n * @param {Vector3} v The point.\n * @param {Vector4} dst optional vector4 to store result\n * @return {Vector4} dst or new Vector4 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || new MatType(3);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d =\n    v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] =\n    (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) /\n    d;\n  dst[1] =\n    (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) /\n    d;\n  dst[2] =\n    (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) /\n    d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {Matrix4} m The matrix.\n * @param {Vector3} v The direction.\n * @param {Vector4} dst optional vector4 to store result\n * @return {Vector4} dst or new Vector4 if not provided\n * @memberOf module:webgl-3d-math\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || new MatType(3);\n\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {Matrix4} m The matrix.\n * @param {Vector3} v The normal.\n * @param {Vector3} [dst] The direction.\n * @return {Vector3} The transformed direction.\n * @memberOf module:webgl-3d-math\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || new MatType(3);\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nfunction copy(src, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0] = src[0];\n  dst[1] = src[1];\n  dst[2] = src[2];\n  dst[3] = src[3];\n  dst[4] = src[4];\n  dst[5] = src[5];\n  dst[6] = src[6];\n  dst[7] = src[7];\n  dst[8] = src[8];\n  dst[9] = src[9];\n  dst[10] = src[10];\n  dst[11] = src[11];\n  dst[12] = src[12];\n  dst[13] = src[13];\n  dst[14] = src[14];\n  dst[15] = src[15];\n\n  return dst;\n}\n\nexport const m4 = {\n  copy: copy,\n  lookAt: lookAt,\n  addVectors: addVectors,\n  subtractVectors: subtractVectors,\n  scaleVector: scaleVector,\n  distance: distance,\n  distanceSq: distanceSq,\n  normalize: normalize,\n  compose: compose,\n  cross: cross,\n  decompose: decompose,\n  dot: dot,\n  identity: identity,\n  transpose: transpose,\n  length: length,\n  lengthSq: lengthSq,\n  orthographic: orthographic,\n  frustum: frustum,\n  perspective: perspective,\n  translation: translation,\n  translate: translate,\n  xRotation: xRotation,\n  yRotation: yRotation,\n  zRotation: zRotation,\n  xRotate: xRotate,\n  yRotate: yRotate,\n  zRotate: zRotate,\n  axisRotation: axisRotation,\n  axisRotate: axisRotate,\n  scaling: scaling,\n  scale: scale,\n  multiply: multiply,\n  inverse: inverse,\n  transformVector: transformVector,\n  transformPoint: transformPoint,\n  transformDirection: transformDirection,\n  transformNormal: transformNormal,\n  setDefaultType: setDefaultType,\n};\n","import { m4 } from \"./m4\";\n\nexport default class MatrixStack {\n  constructor() {\n    this.stack = [];\n\n    // since the stack is empty this will put an initial matrix in it\n    this.restore();\n  }\n\n  // Pops the top of the stack restoring the previously saved matrix\n  restore = function () {\n    this.stack.pop();\n    // Never let the stack be totally empty\n    if (this.stack.length < 1) {\n      this.stack[0] = m4.identity();\n    }\n  };\n\n  // Pushes a copy of the current matrix on the stack\n  save = function () {\n    this.stack.push(this.getCurrentMatrix());\n  };\n  // Gets a copy of the current matrix (top of the stack)\n  getCurrentMatrix = function () {\n    return this.stack[this.stack.length - 1].slice();\n  };\n\n  // Lets us set the current matrix\n  setCurrentMatrix = function (m) {\n    return (this.stack[this.stack.length - 1] = m);\n  };\n  // Translates the current matrix\n  translate = function (x, y, z) {\n    if (z === undefined) {\n      z = 0;\n    }\n    var m = this.getCurrentMatrix();\n    this.setCurrentMatrix(m4.translate(m, x, y, z));\n  };\n\n  // Rotates the current matrix around Z\n  rotateZ = function (angleInRadians) {\n    var m = this.getCurrentMatrix();\n    this.setCurrentMatrix(m4.zRotate(m, angleInRadians));\n  };\n\n  // Scales the current matrix\n  scale = function (x, y, z) {\n    if (z === undefined) {\n      z = 1;\n    }\n    var m = this.getCurrentMatrix();\n    this.setCurrentMatrix(m4.scale(m, x, y, z));\n  };\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import {\n  resizeCanvasToDisplaySize,\n  createBufferInfoFromArrays,\n  setBuffersAndAttributes,\n  setUniforms,\n  createProgramInfo,\n} from \"./utils\";\n\nimport mountain from \"./assets/mountain.jpg\";\nimport food from \"./assets/food.jpg\";\nimport field from \"./assets/field.jpg\";\nimport \"./index.css\";\nimport { loadImageAndCreateTextureInfo } from \"./webgl\";\nimport { m4 } from \"./m4\";\nimport MatrixStack from \"./matrix-stack\";\n\n// https://webglfundamentals.org/webgl/lessons/webgl-less-code-more-fun.html\n\nconst canvas = document.querySelector(\"#canvas\");\nconst gl = canvas.getContext(\"webgl\");\n\nconst standardBuffers = {\n  position: {\n    numComponents: 2,\n    // a single quad\n    data: [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1],\n  },\n  texcoord: {\n    numComponents: 2,\n    data: [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1],\n  },\n};\n\n// setup GLSL program\nvar programInfo = createProgramInfo(gl, [\n  \"vertex-shader-3d\",\n  \"fragment-shader-3d\",\n]);\n\nconst objectsToDraw = [\n  {\n    programInfo: programInfo,\n    bufferInfo: createBufferInfoFromArrays(gl, { ...standardBuffers }),\n    uniforms: {\n      u_matrix: m4.identity(),\n      u_textureMatrix: m4.identity(),\n    },\n    texture: loadImageAndCreateTextureInfo(mountain, gl),\n    matrix: new MatrixStack(),\n  },\n  {\n    programInfo: programInfo,\n    bufferInfo: createBufferInfoFromArrays(gl, { ...standardBuffers }),\n    uniforms: {\n      u_matrix: m4.identity(),\n      u_textureMatrix: m4.identity(),\n    },\n    texture: loadImageAndCreateTextureInfo(food, gl),\n    matrix: new MatrixStack(),\n  },\n  {\n    programInfo: programInfo,\n    bufferInfo: createBufferInfoFromArrays(gl, { ...standardBuffers }),\n    uniforms: {\n      u_matrix: m4.identity(),\n      u_textureMatrix: m4.identity(),\n    },\n    texture: loadImageAndCreateTextureInfo(field, gl),\n    matrix: new MatrixStack(),\n  },\n];\n\nfunction render() {\n  // Tell WebGL how to convert from clip space to pixels\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n  // Clear the canvas AND the depth buffer.\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function (object) {\n    var programInfo = object.programInfo;\n    var bufferInfo = object.bufferInfo;\n    var bindBuffers = false;\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions then when\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      lastUsedBufferInfo = bufferInfo;\n      setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    setUniforms(programInfo, object.uniforms);\n\n    // use the correct texture\n    gl.bindTexture(gl.TEXTURE_2D, object.texture.texture);\n    // Draw\n    gl.drawArrays(gl.TRIANGLES, 0, bufferInfo.numElements);\n  });\n}\n\n// Draw the scene.\nfunction translations(time) {\n  time = time * 0.001;\n\n  resizeCanvasToDisplaySize(gl.canvas);\n\n  objectsToDraw.forEach((object, index) => {\n    const destX =\n      gl.canvas.width / 2 + (Math.cos(time + index) * gl.canvas.width) / 2;\n    const destY = gl.canvas.height / 2 + index * 100;\n\n    const { matrix, texture, uniforms } = object;\n    // update imageUniforms\n    matrix.save();\n    // this matrix will translate our quad to dstX, dstY\n    matrix.translate(destX, destY);\n    //rotate it on the left top corner\n    matrix.rotateZ(time);\n    //offset it so we rotate from center of image\n    matrix.translate(texture.width / -2, texture.height / -2);\n\n    // let's set the image in screen space\n    var screenMatrix = m4.orthographic(\n      0,\n      gl.canvas.width,\n      gl.canvas.height,\n      0,\n      -1,\n      1\n    );\n\n    // this matrix moves the origin to the one represented by\n    // the current matrix stack.\n    screenMatrix = m4.multiply(screenMatrix, matrix.getCurrentMatrix());\n\n    // this matrix will scale our 1 unit quad\n    // from 1 unit to texWidth, texHeight units\n    screenMatrix = m4.scale(screenMatrix, texture.width, texture.height, 1);\n\n    uniforms.u_matrix = screenMatrix;\n\n    matrix.restore();\n  });\n}\n\nfunction update(time) {\n  translations(time);\n  render();\n  requestAnimationFrame(update);\n}\n\nrequestAnimationFrame(update);\n"],"sourceRoot":""}